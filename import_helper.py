"""
import_helper.py
- provides helper functions for importing

LibreBulletin automated bulletin generation
By Gabriel Staples
https://github.com/ElectricRCAircraftGuy/LibreBulletin
"""

import sys
import os
import errno

def extract_config_file_from_inputs(bulletin_INPUTS_path, demo):
    """
    Extract out config.py from the bulletin_INPUTS text file and place it into the correct
    "autogenerated" folder.
    """
    print('Extracting config.py portion of file out of "{}".'.format(bulletin_INPUTS_path))

    file = open(bulletin_INPUTS_path, "r")
    text = file.read()
    file.close()

    # Extract the config.py portion of the file (all contents after a given delimiter string)
    delimiter = '==PYTHON CODE config.py START--DO NOT MODIFY THIS LINE=='
    print('  Searching for delimiter: "{}".'.format(delimiter))
    if (delimiter in text):
        print("  Found.")
    else:
        print("  ERROR: delimiter not found in file. Cannot autogenerate config.py. Exiting program.")
        sys.exit()
    max_num_splits = 1
    config_file_str = text.split(delimiter, max_num_splits)[-1]

    # Save config.py
    if (demo == True):
        savepath = './autogenerated/config.py'
    else:
        savepath = './MY_PERSONAL_WARD_INFO/autogenerated/config.py'
    print('  Writing file to "{}".'.format(savepath))
    # 1st, ensure this folder exists
    # See: https://stackoverflow.com/a/12517490/4561887
    # And https://docs.python.org/3.7/library/errno.html
    if not os.path.exists(os.path.dirname(savepath)):
        try:
            os.makedirs(os.path.dirname(savepath))
        except OSError as exc: # Guard against race condition
            if exc.errno != errno.EEXIST:
                # If the error is anything but "File Exists" (https://docs.python.org/3.7/library/errno.html), raise
                # the current exception up to a higher level
                raise
    # 2nd, ensure "__init__.py" also exists here so that files in this folder can become Python submodules
    file = open('./autogenerated/__init__.py', 'w')
    file.close()
    # 3rd, save config.py
    file = open(savepath, 'w')
    file.write(config_file_str)
    file.close()
    print('  Done.')









