# bulletin_INPUTS.txt
# LibreBulletin automated bulletin generation
# By Gabriel Staples
# https://github.com/ElectricRCAircraftGuy/LibreBulletin

# Recommended: View this file with Python syntax highlighting.

# INSTRUCTIONS: 

# 1. Fill in the text fields below. Format is "FIELD_NAME: field_value", where "FIELD_NAME" must be contained verbatim
# in the "ward_bulletin_template.odt" document, and "field_value" is the verbatim word, words, or phrase you want to
# replace the corresponding "FIELD_NAME" in the .odt document via an automatic find/replace performed by this
# LibreBulletin Python script.

# 2. FIELD_NAME must be a single word with no spaces, though underscores (_) or dashes (-) are OK.

# 3. field_value can be any number of words, but if there are multiple spaces between words, they will be reduced to a
# single space. It doesn't matter how much or what kind of whitespace (tabs, spaces, etc) is between the FIELD_NAME and 
# the field_value--format this text document to your liking.

# 4. FIELD_NAME should have a colon (:) immediately following it, with *no spaces or other characters* between the
# FIELD_NAME and the colon. ie: "FIELD_NAME:". However, it will still work without the colon at the end. The colon just
# makes the list below more readable. The FIELD_NAME is simply identified as the *first word* of an uncommented line.

# 5. By convention, FIELD_NAME should be written in ALL CAPS, though this is not enforced, and it will work even if it
# is mixed case or all lower-case. Using ALL CAPS, however, helps to make the field stand out more in the .odt document
# so you can more quickly identify which words in the document are fields you expect to be replaced, and which words
# are not.

# 6. Comments in this document begin with "#", and are ignored, so feel free to delete all these comments if you feel
# like it. Blank spaces also are ignored and don't matter. 

# 7. Comments can NOT come on the same line as field names (ex: at end very end of the line), as they will be
# interpreted as field *values* instead, since all characters and words after the field *name* are automatically
# considered to be part of the field  *value*.

# 8. If you don't want to do a find/replace on a field below you can either delete it or simply comment it out by
# adding the comment character "#" in front of the FIELD_NAME. 

# 9. Order of fields doesn't matter, so feel free to re-arrange them below as you see fit.

# 10. If you'd like to add a new field to find and replace in the .odt document, simply invent one with any unique name
# you can think of (I recommend all caps and with a few preceding characters to indicate what it might mean, such as is
# indicated in the examples below [ex: "T1_", "IM_", "SM_", etc]), type it into the .odt document where you want,
# format it in the .odt document as desired, and then add the field name and value anywhere into this document below.
# Again, order doesn't matter. You can add, rename, or delete any of the fields below as you wish. Just be sure to make
# the corresponding FIELD_NAME changes in the .odt document.

# 11. If you'd like to replace a FIELD_NAME with an empty string (thereby deleting the FIELD_NAME) in the .odt document,
# just leave the field_value blank below.

# 12. Special fields are fields which will get automatically loaded into the document, but you *don't* have to fill
# them out here at all. Just make sure their FIELD_NAMEs are in the .odt document is all if you'd like to use them. See
# the list below. These fields are automatically populated with appropriate values by the LibreBulletin script.
# See the "bulletin_find_and_replace.py" file and the "config.py" file for the source code.
# Special Fields:
#   Date:
#     "D_UPCOMING_SUNDAY_DATE" = the date of this coming Sunday (or today if today is Sunday),
#     in format "August 5, 2018", for example.
#   Hymn Names: 
#     “SM_OPENING_HYMN_NAME” = opening hymn name; automatically pulled using the hymn number field below
#     “SM_SACRAMENT_HYMN_NAME” = hymn name automatically pulled based on the corresponding hymn number field below
#     “SM_INTERMEDIATE_HYMN_NAME” = hymn name automatically pulled based on the corresponding hymn number field below
#     “SM_CLOSING_HYMN_NAME” = hymn name automatically pulled based on the corresponding hymn number field below
#   For Church Cleaning Assignments Table:
#     "CCA_MONTH" = the church cleaning assignments table month--ex: "September". Nb: This field *must come first*, 
#     out of these 5 fields, for each new row in the table. Otherwise, as it is currently written, the code will not 
#     be able to properly parse and place the following 4 fields. 
#     "DAY" = the cleaning day--ex: "22"
#     "CCA_FAMILY1" = 1st family assigned to clean on this day--ex: "Smith"
#     "CCA_FAMILY2" = 2nd family assigned to clean on this day--ex: "Adams"
#     "CCA_FAMILY3" = 3rd family assigned to clean on this day--ex: "Jones"

# 13. Special markers are "fields" which must be in the document for certain script features to work, such as deleting
# the  speakers and intermediate hymn for Fast Sunday.
# Special Markers:
#     "START_OF_DELETE_FOR_FAST_SUNDAY" = a text marker placed in the document just before the 
#     list of speakers, in order to indicate to the script where to start deleting when modifying the document for
#     Fast Sundays.
#     "END_OF_DELETE_FOR_FAST_SUNDAY" = a text marker placed in the document just after the 
#     list of speakers, in order to indicate to the script where to stop deleting when modifying the document for
#     Fast Sundays.

# 14. Note: view this file in a text editor with Python syntax highlighting in order to make it easier to look at. This
# will make comments stand out from FIELDS and VALUES. Good examples of no-cost text editors for basic software
# development include Notepad++, Sublime Text, Geany, Visual Studio Code, and Atom, for example.

# =========================================================================================
# User Fields
# =========================================================================================

# -----------------------------------------------------------------------------------------
# Ward Leadership Directory:
# ("T1_" here means "Table 1")
# -----------------------------------------------------------------------------------------
# NAMES:
T1_1_BISHOP:                John Doe
T1_2_1ST_COUNSELOR:         Alex Albert    
T1_3_2ND_COUNSELOR:         Billy Bob
T1_4_WARD_CLERK:            Camden Cookie
T1_5_EXEC_SECRETARY:        Dilbert Dalton
T1_6_RELIEF_SOC_PRES:       Edwina Enigma
T1_7_ELDERS_Q_PRES:         Edward Eldon
T1_8_YM_PRES:               Frank Franklin
T1_9_YW_PRES:               Fannie Flowers
T1_10_PRIMARY_PRES:         Aunt Jemima
T1_11_SUNDAY_SCH_PRES:      Goldilocks Goodwin
T1_12_WARD_MISSION_LDR:     Henry Hopper
T1_13_FT_MISSION_SISTERS:   Sisters Hylda & Hedwig
T1_14_FT_MISSION_ELDERS:    Elders Illinois & Iliad

# PHONE NUMBERS:
T1_1_PH:    111-111-1111
T1_2_PH:    222-222-2222
T1_3_PH:    333-333-3333
T1_4_PH:    444-444-4444
T1_5_PH:    555-555-5555
T1_6_PH:    666-666-6666
T1_7_PH:    777-777-7777
T1_8_PH:    888-888-8888
T1_9_PH:    999-999-9999
T1_10_PH:   aaa-aaa-aaaa
T1_11_PH:   bbb-bbb-bbbb
T1_12_PH:   ccc-ccc-cccc
T1_13_PH:   ddd-ddd-dddd
T1_14_PH:   eee-eee-eeee

# -----------------------------------------------------------------------------------------
# Front cover image credits
# ("IM_" stands for "IMage")
# -----------------------------------------------------------------------------------------
IM_IMAGE_NAME:                  "The Resurrected Jesus Christ," by Harry Anderson
HTTPS://WWW.IM_IMAGE_URL.COM:   https://www.lds.org/media-library/images/the-second-coming-39621?lang=eng
# IM_IMAGE_NAME:                  Manti, Utah Temple w/“Charcoal Sketch” filter applied in LibreOffice 6.1
# HTTPS://WWW.IM_IMAGE_URL.COM:   https://www.lds.org/temples/photo-gallery/manti-utah-temple?lang=eng

# -----------------------------------------------------------------------------------------
# Sacrament Meeting
# ("SM_" stands for "Sacrament Meeting")
# -----------------------------------------------------------------------------------------
SM_PRESIDING:               Bishop Bobby Blake
SM_CONDUCTING:              Carl Caddy, 2nd Counselor
SM_ORGANIST:                Daisy Daffodil
SM_CHORISTER:               Emma Emmerson

SM_OPENING_HYMN_NUM:        131
SM_INVOCATION:              Frank Flanders
SM_SACRAMENT_HYMN_NUM:      196

# "Administration and Passing of the Sacrament" happens here.

# These next 4 fields are ignored if fast_sunday is set to True in "config.py"
SM_YOUTH_SPEAKER:           Gina Good
SM_SPEAKER1:                Zara Zarahemla
SM_INTERMEDIATE_HYMN_NUM:   129
SM_SPEAKER2:                Nephi Sonofalma

# These fields are valid whether it is Fast Sunday or not
SM_CLOSING_HYMN_NUM:        304
SM_BENEDICTION:             Alma Theyounger

# -----------------------------------------------------------------------------------------
# Church Cleaning Assignments
# ("CCA_" stands for "Church Cleaning Assignments")
# -----------------------------------------------------------------------------------------
CCA_COORDINATOR:        Mosiah King
CCA_COORDINATOR_PHONE:  123-456-7890

# =========================================================================================
# User Config
# Update these parameters to customize your bulletin!

# - TODO: move config.py into this file! Then have my script literally separate the config.py
# portion of this file out into a python file called "config.py". It will then run it from 
# there as actual Python code! 

# - The following portion of this file must be written in the *actual python language*.
# - Do NOT modify this next line just below, as it is required as the delimiter to tell the program
# where the python code starts.
# ==PYTHON CODE config.py START--DO NOT MODIFY THIS LINE==
# =========================================================================================

# Fast Sunday formatting:
# Turn fast_sunday format on or off by setting this value to True, False, or "auto". "auto" will have the script
# automatically  make an educated guess by assuming that the 1st Sunday of each month is "Fast Sunday", which is
# normally the case. 
# See "bulletin_INPUTs.txt" for which user fields this setting affects.
fast_sunday = "auto" # True, False, or "auto" (with the quotes)

# TODO: make this control the date placed on the bulletin. Anything before this time will use today's date, if today is
# Sunday. Anything equal to or after this time will use next Sunday's date on the bulletin, even if today is Sunday.
# This way, if you run the bulletin script before church you'll get today's date on it, but if you run it after church
# (ex: in preparation for the next Sunday), you'll get next Sunday's date on it.
# The time string must be in a *4-digit* 24-hr time. 
# Ex: 12:30pm is "1230". 1:15am is "0115". 1:15pm is "1315". 11:15pm is "2315", etc.
time_to_use_next_sunday_date = "1230"

# Bulletin Input Template, Output File, & Hymns Paths:
# NB: use forward slashes (/) for path names, NOT back slashes (\)!--Even in Windows!
# For relative paths, use "." for the current directory and ".." for one directory up.
hymns_src_filepath = "./hymns_of_the_Church_of_Jesus_Christ_of_Latter-day_Saints_formatted.txt"
# Demonstration input files to see this code function
input_odt_filepath = "./ward_bulletin_template.odt"
output_odt_filepath = "./ward_bulletin_template_out_1.odt"
bulletin_inputs_filepath = "./bulletin_INPUTS.txt"

# Cleaning assignments:
# The cleaning assignments list must be a "csv" (Comma-Separated Variable) type file. You can easily export this 
# file type from Microsoft Excel, LibreOffice Calc, or Google docs spreadsheets. 
# - NB: "this year" and "next year" are relative to the *upcoming Sunday's date*, NOT to *today's* date (whatever date
# "today" may be)! That means if this upcoming Sunday is the first Sunday in 2019, then the file for "this year"
# ("cleaning_assignments_csv_filepath_this_yr") better be set to a file for *2019*, NOT 2018! Otherwise, the table will
# be filled wrong since it has no way of identifying from the data which year the data is for. It can simply
# detect where the data *transitions* from one year to another is all.
# - Set the paths below to "None" (without the quotes) to disable automatic filling of this table in the bulletin, or 
# you can simply remove the cleaning assignments table and its associated "Special Fields" from the bulletin.
# Demonstration input files to see this code function   
# - Ex: uncomment the below 2 lines, and comment out the 2 lines below that to disable this feature.
# cleaning_assignments_csv_filepath_this_yr = None 
# cleaning_assignments_csv_filepath_next_yr = None
cleaning_assignments_csv_filepath_this_yr = "./cleaning_assignments_2018.csv"
cleaning_assignments_csv_filepath_next_yr = "./cleaning_assignments_2019.csv"
cleaning_assignments_num_header_rows = 1 # Number of rows in the .csv files which contain header names instead of data

# Front cover image:
# Must be either a ".odt" document with a single image saved in it, OR a ".png", ".jpg", or ".bmp" image.
# TODO: IMPLEMENT THE ability to read image in from another .odt file. This shouldn't be that hard. 
# Also, test Pillow's ability to use/convert png and bmp files (I've already tested .jpg to .png and it works fine).
# Set to "None" (without the quotes) if you don't want to replace the front cover image.
# ie: `front_cover_image_filepath = None`
# For demonstration purposes to see this code function:
# front_cover_image_filepath = None # Uncomment this, and comment out the line below to disable image replacement.
front_cover_image_filepath = "pics/the-second-coming-39621-print.jpg"
# For scaling & positioning the image:
# - These are the max x/y sizes, as the image will be scaled proportionally to its original x/y dimensions, but not
#   to exceed these max image sizes below.
max_image_size_x_in = 4.5 # inches; default: 4.5 in
max_image_size_y_in = 4.65 # inches; default: 4.65 in

# frame sizes (ie: the x/y area on the page where the image needs to fit)
# - these parameters are required separately from the max_image_size x/y above so that image centering calcs
#   still work even if you shrink the image (via the max_image_size x/y parameters above) to be smaller than 
#   the frame size
frame_size_x_in = 4.5 # inches
frame_size_y_in = 4.65 # inches
# frame position
frame_left_x_pos_in = 6 # inches; from left side of entire page
frame_top_y_pos_in = 0.25 # inches; from top of entire page

# TODO: In the distant future in the far-away land of Distasia (ie: someday--not important right now), I need to do a
# better job of automatically vertically-centering the contents of the front cover when I do the automatic front cover
# image replacement. Currently, I only take into account the "frame size" above, which is simply the size of the
# imaginary box that I'd like the front cover image to fit into, above the text box below the image, and below some
# reasonable location near the top of the page. This does a pretty good job of vertically centering the image, but since
# it doesn't also shift the text box below the image around, it can't do it perfectly.  So, **add vertical centering of
# the text box below the image** as part of the process when vertically centering the image. This will require
# identifying it, looking up its x, y, width, height parameters in contents.xml, calculating new values, and doing the
# replacement, but will allow perfect vertical centering of both the new front cover image and the text box each time a
# new image is added.
# CURRENT WORKAROUND: just manually bump the image up or down and the text box up or down with the arrow keys before
# printing and after doing the automatic image replacement/bulletin generation each week. Done! Good enough for now!



